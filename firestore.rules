rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Kullanıcılar koleksiyonu için kurallar
    match /users/{userId} {
      // Kullanıcılar kendi profillerini okuyabilir ve güncelleyebilir
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Yeni kullanıcı oluştururken kullanıcı ID'si kontrol edilir
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Admin tüm kullanıcıları okuyabilir
      allow read: if request.auth != null && 
        request.auth.token.email == 'cerennsinmec@gmail.com';
      

    }
    
    // Notlar koleksiyonu için kurallar
    match /notes/{noteId} {
      // Kullanıcılar sadece kendi notlarını okuyabilir ve yazabilir
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Yeni not oluştururken kullanıcı ID'si kontrol edilir
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Blog yazıları koleksiyonu için kurallar
    match /blog-posts/{postId} {
      // Herkes blog yazılarını okuyabilir
      allow read: if true;
      
      // Giriş yapmış kullanıcılar blog yazısı oluşturabilir
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.authorId;
      
      // Sadece yazar veya admin blog yazısını güncelleyebilir
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.authorId || 
         request.auth.token.email == 'cerennsinmec@gmail.com');
      
      // Sadece yazar veya admin blog yazısını silebilir
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.authorId || 
         request.auth.token.email == 'cerennsinmec@gmail.com');
      
      // Beğeniler alt koleksiyonu
      match /likes/{likeId} {
        // Giriş yapmış kullanıcılar beğeni ekleyebilir/kaldırabilir
        allow read, write: if request.auth != null;
      }
      
      // Yorumlar alt koleksiyonu
      match /comments/{commentId} {
        // Herkes yorumları okuyabilir, giriş yapmış kullanıcılar yorum ekleyebilir
        allow read: if true;
        allow write: if request.auth != null;
      }
    }
    
    // Kaydedilen yazılar koleksiyonu (savedpost)
    match /savedpost/{saveId} {
      // Herkes okuyabilir, giriş yapmış kullanıcılar kendi kayıtlarını oluşturabilir/silebilir
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.saverId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.saverId;
    }
    
    // Konuşmalar koleksiyonu (conversations)
    match /conversations/{conversationId} {
      // Sadece konuşmaya katılan kullanıcılar okuyabilir
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Giriş yapmış kullanıcılar yeni konuşma oluşturabilir
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      
      // Konuşmaya katılan kullanıcılar güncelleyebilir (son mesaj vs.)
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // Mesajlar koleksiyonu (messages)
    match /messages/{messageId} {
      // Sadece gönderen ve alan mesajı okuyabilir
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      
      // Giriş yapmış kullanıcılar mesaj gönderebilir
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      
      // Sadece gönderen mesajı güncelleyebilir (okundu durumu vs.)
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      
      // Sadece gönderen mesajı silebilir
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.senderId;
    }
  }
} 