rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Kullanıcılar koleksiyonu
    match /users/{userId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Blog yazıları koleksiyonu
    match /blog-posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update: if request.auth != null && (
        // Yazar kendi yazısını güncelleyebilir
        request.auth.uid == resource.data.authorId ||
        // Giriş yapmış kullanıcılar sadece totalReadingTime alanını increment edebilir
        (request.auth != null && 
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['totalReadingTime']))
      );
      allow delete: if request.auth != null;
    }

    // Notlar koleksiyonu
    match /notes/{noteId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Beğeniler alt koleksiyonu
    match /blog-posts/{postId}/likes/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Yorumlar alt koleksiyonu
    match /blog-posts/{postId}/comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Kaydedilen yazılar koleksiyonu (savedpost)
    match /savedpost/{saveId} {
      // Herkes okuyabilir, giriş yapmış kullanıcılar kendi kayıtlarını oluşturabilir/silebilir
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.saverId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.saverId;
    }
    
    match /conversations/{conversationId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }

    match /messages/{messageId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
    }
    
    // Takip ilişkileri koleksiyonu
    match /follows/{followId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.followerId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.followerId;
    }
  }
}